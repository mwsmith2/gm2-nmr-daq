//
// File generated by /home/newg2/Packages/root/bin/rootcint at Mon Sep 28 10:25:52 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DataLibraryDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DataLibraryDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TEnvi_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEnvi(void *p = 0);
   static void *newArray_TEnvi(Long_t size, void *p);
   static void delete_TEnvi(void *p);
   static void deleteArray_TEnvi(void *p);
   static void destruct_TEnvi(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TEnvi*)
   {
      ::TEnvi *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEnvi >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEnvi", ::TEnvi::Class_Version(), "./TEnvi.h", 8,
                  typeid(::TEnvi), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TEnvi::Dictionary, isa_proxy, 4,
                  sizeof(::TEnvi) );
      instance.SetNew(&new_TEnvi);
      instance.SetNewArray(&newArray_TEnvi);
      instance.SetDelete(&delete_TEnvi);
      instance.SetDeleteArray(&deleteArray_TEnvi);
      instance.SetDestructor(&destruct_TEnvi);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TEnvi*)
   {
      return GenerateInitInstanceLocal((::TEnvi*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEnvi*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TEnvi::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TEnvi::Class_Name()
{
   return "TEnvi";
}

//______________________________________________________________________________
const char *TEnvi::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TEnvi*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEnvi::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TEnvi*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEnvi::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TEnvi*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEnvi::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TEnvi*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TEnvi::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEnvi.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEnvi::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEnvi::Class(),this);
   }
}

//______________________________________________________________________________
void TEnvi::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEnvi.
      TClass *R__cl = ::TEnvi::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tStamp", &tStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p1val", &p1val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p2val", &p2val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p3val", &p3val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p4val", &p4val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p5val", &p5val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p6val", &p6val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p7val", &p7val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p8val", &p8val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c1val", &c1val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2val", &c2val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c3val", &c3val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c4val", &c4val);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TEnvi(void *p) {
      return  p ? new(p) ::TEnvi : new ::TEnvi;
   }
   static void *newArray_TEnvi(Long_t nElements, void *p) {
      return p ? new(p) ::TEnvi[nElements] : new ::TEnvi[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEnvi(void *p) {
      delete ((::TEnvi*)p);
   }
   static void deleteArray_TEnvi(void *p) {
      delete [] ((::TEnvi*)p);
   }
   static void destruct_TEnvi(void *p) {
      typedef ::TEnvi current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TEnvi

/********************************************************
* DataLibraryDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDataLibraryDict();

extern "C" void G__set_cpp_environmentDataLibraryDict() {
  G__cpp_reset_tagtableDataLibraryDict();
}
#include <new>
extern "C" int G__cpp_dllrevDataLibraryDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TEnvi */
static int G__DataLibraryDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEnvi* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEnvi[n];
     } else {
       p = new((void*) gvp) TEnvi[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEnvi;
     } else {
       p = new((void*) gvp) TEnvi;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEnvi::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEnvi::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEnvi::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEnvi::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEnvi*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEnvi::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEnvi::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEnvi::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataLibraryDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEnvi::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataLibraryDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEnvi* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEnvi(*(TEnvi*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEnvi G__TTEnvi;
static int G__DataLibraryDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEnvi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEnvi*) (soff+(sizeof(TEnvi)*i)))->~G__TTEnvi();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEnvi*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEnvi*) (soff))->~G__TTEnvi();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataLibraryDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEnvi* dest = (TEnvi*) G__getstructoffset();
   *dest = *(TEnvi*) libp->para[0].ref;
   const TEnvi& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TEnvi */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDataLibraryDict {
 public:
  G__Sizep2memfuncDataLibraryDict(): p(&G__Sizep2memfuncDataLibraryDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDataLibraryDict::*p)();
};

size_t G__get_sizep2memfuncDataLibraryDict()
{
  G__Sizep2memfuncDataLibraryDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDataLibraryDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi))) {
     TEnvi *G__Lderived;
     G__Lderived=(TEnvi*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi),G__get_linked_tagnum(&G__DataLibraryDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDataLibraryDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DataLibraryDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataLibraryDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataLibraryDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataLibraryDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataLibraryDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DataLibraryDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataLibraryDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataLibraryDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataLibraryDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataLibraryDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TEnvi */
static void G__setup_memvarTEnvi(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi));
   { TEnvi *p; p=(TEnvi*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tStamp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p1val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p1val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p2val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p2val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p3val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p3val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p4val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p4val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p5val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p5val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p6val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p6val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p7val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p7val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p8val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"p8val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c1val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"c1val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c2val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"c2val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c3val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"c3val=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->c4val)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"c4val=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataLibraryDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDataLibraryDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTEnvi(void) {
   /* TEnvi */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi));
   G__memfunc_setup("TEnvi",486,G__DataLibraryDict_168_0_1, 105, G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataLibraryDict_168_0_2, 85, G__get_linked_tagnum(&G__DataLibraryDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEnvi::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataLibraryDict_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEnvi::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataLibraryDict_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEnvi::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataLibraryDict_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEnvi::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataLibraryDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataLibraryDict_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataLibraryDict_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEnvi::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataLibraryDict_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEnvi::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataLibraryDict_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEnvi::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataLibraryDict_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEnvi::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEnvi", 486, G__DataLibraryDict_168_0_14, (int) ('i'), G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi), -1, 0, 1, 1, 1, 0, "u 'TEnvi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEnvi", 612, G__DataLibraryDict_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataLibraryDict_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__DataLibraryDictLN_TEnvi), -1, 1, 1, 1, 1, 0, "u 'TEnvi' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDataLibraryDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDataLibraryDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDataLibraryDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DataLibraryDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataLibraryDictLN_TEnvi = { "TEnvi" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDataLibraryDict() {
  G__DataLibraryDictLN_TClass.tagnum = -1 ;
  G__DataLibraryDictLN_TBuffer.tagnum = -1 ;
  G__DataLibraryDictLN_TMemberInspector.tagnum = -1 ;
  G__DataLibraryDictLN_TObject.tagnum = -1 ;
  G__DataLibraryDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DataLibraryDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataLibraryDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DataLibraryDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataLibraryDictLN_TEnvi.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDataLibraryDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataLibraryDictLN_TEnvi),sizeof(TEnvi),-1,292096,(char*)NULL,G__setup_memvarTEnvi,G__setup_memfuncTEnvi);
}
extern "C" void G__cpp_setupDataLibraryDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDataLibraryDict()");
  G__set_cpp_environmentDataLibraryDict();
  G__cpp_setup_tagtableDataLibraryDict();

  G__cpp_setup_inheritanceDataLibraryDict();

  G__cpp_setup_typetableDataLibraryDict();

  G__cpp_setup_memvarDataLibraryDict();

  G__cpp_setup_memfuncDataLibraryDict();
  G__cpp_setup_globalDataLibraryDict();
  G__cpp_setup_funcDataLibraryDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDataLibraryDict();
  return;
}
class G__cpp_setup_initDataLibraryDict {
  public:
    G__cpp_setup_initDataLibraryDict() { G__add_setup_func("DataLibraryDict",(G__incsetup)(&G__cpp_setupDataLibraryDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDataLibraryDict() { G__remove_setup_func("DataLibraryDict"); }
};
G__cpp_setup_initDataLibraryDict G__cpp_setup_initializerDataLibraryDict;

